// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `fmt`, `fmt`, `fmt`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ProductDetails>>
abstract class ProductDetails implements RustOpaqueInterface {
  List<String> get features;

  String get id;

  List<String> get images;

  bool get inStock;

  int? get price;

  String get rating;

  String? get seller;

  String get site;

  Value get specifications;

  String get title;

  String get url;

  set features(List<String> features);

  set id(String id);

  set images(List<String> images);

  set inStock(bool inStock);

  set price(int? price);

  set rating(String rating);

  set seller(String? seller);

  set site(String site);

  set specifications(Value specifications);

  set title(String title);

  set url(String url);
}

class PriceEntry {
  final int price;
  final bool inStock;
  final String timestamp;

  const PriceEntry({
    required this.price,
    required this.inStock,
    required this.timestamp,
  });

  @override
  int get hashCode => price.hashCode ^ inStock.hashCode ^ timestamp.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is PriceEntry &&
          runtimeType == other.runtimeType &&
          price == other.price &&
          inStock == other.inStock &&
          timestamp == other.timestamp;
}

class ProductRecord {
  final String id;
  final String site;
  final String url;
  final String title;
  final String? seller;
  final List<String> images;
  final String specifications;
  final List<String> features;
  final List<PriceEntry> priceHistory;

  const ProductRecord({
    required this.id,
    required this.site,
    required this.url,
    required this.title,
    this.seller,
    required this.images,
    required this.specifications,
    required this.features,
    required this.priceHistory,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      site.hashCode ^
      url.hashCode ^
      title.hashCode ^
      seller.hashCode ^
      images.hashCode ^
      specifications.hashCode ^
      features.hashCode ^
      priceHistory.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ProductRecord &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          site == other.site &&
          url == other.url &&
          title == other.title &&
          seller == other.seller &&
          images == other.images &&
          specifications == other.specifications &&
          features == other.features &&
          priceHistory == other.priceHistory;
}
